import sys
from random import choice
from PIL import Image
from pathlib import Path

answers = [
    [1, 2, 1, 1, 3, 2, 3, 2, 3, 4, 1, 2, 3, 2, 3, 1, 2, 1, 2, 1],
    [1, 1, 1, 3, 3, 3, 2, 3, 4, 2, 1, 4, 3, 2, 1, 1, 1, 3, 1, 4],
    [2, 4, 3, 1, 3, 1, 3, 3, 1, 1, 2, 1, 2, 3, 2, 1, 1, 3, 1, 3],
    [2, 3, 4, 2, 5, 3, 1, 3, 2, 3, 1, 3, 1, 3, 4, 3, 1, 2, 2, 4],
    [4, 2, 3, 1, 1, 2, 1, 3, 2, 2, 1, 1, 4, 2, 2, 3, 3, 1, 2, 4],
    [3, 4, 1, 1, 2, 1, 3, 1, 3, 2, 3, 1, 2, 3, 2, 2, 1, 1, 4, 2],
    [2, 3, 3, 2, 5, 1, 3, 2, 2, 3, 2, 2, 2, 2, 1, 1, 2, 2, 4, 3],
    [2, 1, 1, 1, 2, 2, 3, 2, 2, 3, 1, 2, 3, 1, 1, 3, 1, 1, 1, 1],
    [4, 3, 4, 1, 4, 1, 1, 2, 2, 2, 1, 1, 2, 3, 3, 1, 3, 3, 4, 3],
    [2, 1, 1, 2, 4, 1, 2, 1, 2, 1, 1, 1, 2, 2, 2, 2, 3, 3, 1, 3],
    [1, 1, 2, 2, 2, 1, 2, 3, 1, 3, 1, 1, 4, 2, 2, 1, 1, 1, 2, 4],
    [3, 3, 1, 2, 4, 1, 4, 1, 1, 2, 1, 3, 3, 2, 2, 1, 1, 4, 3, 1],
    [2, 1, 3, 4, 1, 1, 1, 3, 3, 1, 1, 3, 1, 3, 3, 5, 4, 4, 1, 3],
    [1, 4, 1, 1, 1, 3, 2, 1, 1, 1, 1, 3, 3, 1, 3, 2, 2, 3, 2, 3],
    [1, 1, 2, 3, 4, 1, 3, 3, 3, 2, 2, 1, 2, 2, 2, 1, 3, 4, 3, 4],
    [1, 2, 1, 3, 2, 2, 1, 4, 1, 2, 1, 2, 3, 1, 2, 2, 2, 1, 1, 3],
    [2, 3, 1, 1, 3, 2, 2, 4, 1, 2, 2, 2, 3, 1, 2, 1, 2, 4, 2, 2],
    [3, 4, 1, 3, 3, 1, 3, 2, 1, 3, 3, 2, 1, 2, 3, 3, 2, 2, 1, 1],
    [3, 2, 1, 3, 4, 1, 1, 2, 1, 3, 2, 1, 1, 1, 2, 2, 2, 2, 3, 4],
    [1, 3, 1, 1, 1, 1, 3, 1, 2, 1, 1, 1, 1, 2, 2, 2, 1, 3, 1, 3],
    [2, 3, 1, 3, 1, 2, 3, 1, 2, 1, 3, 4, 3, 3, 3, 1, 1, 3, 2, 2],
    [3, 2, 1, 1, 1, 1, 2, 1, 3, 1, 2, 2, 4, 1, 2, 2, 1, 1, 3, 2],
    [1, 2, 1, 3, 2, 2, 1, 4, 1, 1, 2, 5, 2, 1, 3, 2, 3, 1, 2, 1],
    [3, 2, 2, 1, 1, 2, 4, 3, 1, 1, 3, 1, 1, 3, 3, 2, 1, 2, 2, 4],
    [5, 2, 3, 2, 4, 2, 3, 2, 2, 1, 1, 2, 1, 1, 2, 2, 4, 3, 3, 5],
    [2, 3, 1, 1, 2, 2, 2, 1, 1, 2, 3, 1, 2, 1, 1, 1, 3, 1, 2, 3],
    [4, 2, 1, 1, 4, 3, 3, 2, 3, 1, 1, 1, 1, 2, 1, 1, 1, 4, 3, 2],
    [2, 2, 3, 4, 1, 1, 1, 1, 4, 1, 3, 1, 2, 2, 2, 1, 1, 2, 5, 2],
    [4, 1, 2, 2, 1, 2, 1, 3, 3, 2, 1, 1, 2, 1, 2, 2, 1, 1, 3, 3],
    [1, 1, 2, 2, 1, 1, 2, 1, 1, 2, 2, 2, 1, 3, 2, 1, 1, 2, 3, 1],
    [2, 3, 1, 3, 3, 1, 4, 1, 2, 3, 4, 1, 1, 3, 2, 1, 3, 2, 3, 2],
    [2, 1, 3, 2, 3, 1, 3, 1, 2, 2, 2, 2, 1, 1, 2, 2, 3, 3, 4, 3],
    [1, 3, 2, 2, 3, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 3, 2, 2, 2, 3],
    [1, 1, 2, 2, 3, 2, 1, 2, 1, 2, 3, 1, 3, 5, 4, 3, 3, 4, 1, 3],
    [2, 1, 2, 2, 3, 3, 2, 2, 1, 1, 2, 2, 1, 3, 1, 1, 1, 2, 3, 2],
    [2, 2, 2, 2, 2, 1, 2, 3, 1, 1, 1, 1, 2, 3, 2, 2, 4, 3, 3, 4],
    [1, 1, 1, 4, 1, 3, 1, 4, 1, 2, 4, 1, 2, 2, 3, 1, 3, 1, 3, 2],
    [3, 4, 3, 2, 4, 1, 3, 3, 3, 3, 2, 3, 4, 2, 5, 2, 1, 2, 1, 1],
    [1, 3, 2, 1, 3, 3, 2, 2, 1, 2, 1, 2, 3, 2, 1, 3, 2, 2, 3, 3],
    [2, 1, 1, 1, 1, 1, 2, 3, 1, 1, 1, 1, 1, 3, 4, 3, 1, 3, 3, 2],
]


try:
    aced_cards_path = Path('aced_cards.txt') 

    used = aced_cards_path.read_text().split('\n')
    card = (len(sys.argv) == 2 and sys.argv[1] ) or choice([i for i in range(1, 41) if str(i) not in used]) 

    Image.open(f'cards/{card}.jpg').show(f"–ö–∞—Ä—Ç {card}")

    print(f"–ö–∞—Ä—Ç {card}")

    results = []

    for index in range(20):
        user_answer = int(input(f"‚ùì –ê—Å—É—É–ª—Ç {index + 1}: "))
        correct_answer = answers[int(card) - 1][int(index)]

        if user_answer != correct_answer:
            results.append(f"{index + 1}: ‚úî {correct_answer} (! {user_answer})")

    if (mistake_count := len(results)) > 2:
        print(f"\nüî¥ –®–∞–ª–≥–∞–ª—Ç–∞–Ω–¥ —É–Ω–∞–ª–∞–∞.")
    else:
        aced_cards_path.write_text(f"{aced_cards_path.read_text()}\n{card}")
        print("üü¢ –®–∞–ª–≥–∞–ª—Ç–∞–Ω–¥ —Ç—ç–Ω—Ü–ª—ç—ç.")

    if mistake_count:
        print(results)

except Exception as e:
    print("‚ùå –ê–ª–¥–∞–∞ –≥–∞—Ä–ª–∞–∞.", e)
